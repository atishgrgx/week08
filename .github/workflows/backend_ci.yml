# .github/workflows/backend_ci.ymlS
name: Backend CI â€” Build & Push (matrix, SHA tags)

on:
  push:
    branches: ["**"]
    paths:
      - "backend/**"
      - ".github/workflows/backend_ci.yml"
  pull_request:
    branches: ["main"]
    paths:
      - "backend/**"
      - ".github/workflows/backend_ci.yml"
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }} # e.g. myregistry.azurecr.io
  ACR_NAME: ${{ secrets.ACR_NAME }}

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [ "product_service", "order_service" ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: ACR login via az
        run: az acr login --name ${{ env.ACR_NAME }}

      - name: Cache pip (optional if Python)
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ matrix.service }}-${{ hashFiles('backend/**/requirements.txt') }}
          restore-keys: pip-

      - name: Build & push image (SHA tag)
        uses: docker/build-push-action@v6
        with:
          context: ./backend/${{ matrix.service }}
          push: true
          tags: |
            ${{ env.ACR_LOGIN_SERVER }}/${{ matrix.service }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Logout from Azure
        if: always()
        run: az logout
