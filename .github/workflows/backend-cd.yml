# .github/workflows/backend-cd.yml
name: CD â€” Deploy Backend (AKS, rollout checks)

on:
  push:
    branches: ["main"]
    paths:
      - "k8s/**"
      - ".github/workflows/backend-cd.yml"
  workflow_dispatch:
    inputs:
      aks_cluster_name:
        description: "AKS cluster name"
        required: true
        default: "clusterweek08"
      aks_resource_group:
        description: "AKS resource group"
        required: true
        default: "week08-resource-group"

permissions:
  id-token: write
  contents: read

env:
  NAMESPACE: week08

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CREDENTIALS }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Get AKS credentials
        run: |
          az aks get-credentials \
            --resource-group "${{ github.event.inputs.aks_resource_group || 'week08-resource-group' }}" \
            --name "${{ github.event.inputs.aks_cluster_name || 'clusterweek08' }}" \
            --overwrite-existing

      - name: Create namespace (idempotent)
        run: kubectl get ns $NAMESPACE || kubectl create ns $NAMESPACE

      # OPTIONAL: If your k8s manifests use placeholders, replace them here.
      # Otherwise ensure your Deployment images already reference :${{ github.sha }}
      - name: Apply backend manifests
        run: |
          kubectl apply -f k8s/product_service/
          kubectl apply -f k8s/order_service/

      - name: Wait for rollouts (health checks)
        run: |
          kubectl rollout status deploy/product-service --timeout=120s
          kubectl rollout status deploy/order-service --timeout=120s
